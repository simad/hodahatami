{"version":3,"sources":["webpack:///./src/components/projects/projectListItem.js","webpack:///./src/components/projects/projectList.js","webpack:///./src/pages/work.js","webpack:///./src/components/projects/projectInfo.js"],"names":["props","className","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","slug","ProjectList","projects","data","allMarkdownRemark","edges","map","key","query","render","WorkPage","location","siteTitle","site","siteMetadata","title","keywords","ProjectInfo","client_name","size","description"],"mappings":"6IAIe,WAAAA,GAAK,OAClB,6BACE,kBAAC,IAAD,eAAaA,OAAK,GAAKA,IACzB,6BACEC,UAAS,oCAAqCD,EAAME,KAAKC,YAAYC,UAAvB,yBAC9CC,MACEL,EAAME,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OACdN,EAAME,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAD1C,MAMnB,kBAAC,OAAD,CAAMC,GAAE,SAAWV,EAAME,KAAKC,YAAYQ,KAAQV,UAAU,qBAC1D,yBAAKA,UAAU,6BCNdW,G,UAAc,SAAC,GAAc,IAC5BC,EAD2B,EAAXC,KACAC,kBAAkBC,MAEvC,OACG,yBAAKf,UAAU,8BACb,iDAEDY,EAASI,KAAI,YAAe,IAAZf,EAAW,EAAXA,KACf,OACE,kBAAC,EAAD,CACEgB,IAAKhB,EAAKC,YAAYQ,KACtBT,KAAMA,UA4CH,aAAAF,GAAK,OAClB,kBAAC,cAAD,CACEmB,MAtCe,aAuCfC,OAAQ,SAAAN,GAAI,OACV,kBAAC,EAAD,eAAad,OAAK,EAACc,KAAMA,GAAUd,S,gFCvEzC,gFASMqB,GATN,oBASiB,SAAC,EAAUC,GAAc,IAClCC,EADiC,EAArBT,KACKU,KAAKC,aAAaC,MAEzC,OACE,kBAAC,IAAD,CAAQA,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,OACNC,SAAU,CAAC,YAAD,0CAGZ,6BAAS1B,UAAU,uDACjB,oCACA,wFACA,iDAEE,4BACE,kQAMA,gaAWJ,8CAEA,yBAAKA,UAAU,SACb,oCACE,gGAGA,8BACE,8CAKN,wHAEwB,6BAFxB,sTAQA,sLAIE,gCACG,IADH,mKAOF,4OAKE,6BACA,uGAGA,6BATF,iGAYE,6BACA,6BAbF,4NAmBF,kBAAC,IAAD,SAuCS,mBAAAD,GAAK,OAClB,kBAAC,cAAD,CACEmB,MApCY,aAqCZC,OAAQ,SAAAN,GAAI,OACV,kBAACO,EAAD,eAAUC,SAAUtB,EAAMsB,SAAUtB,OAAK,EAACc,KAAMA,GAAUd,S,2DCxIhE,mCAkBe4B,IAfK,SAAA5B,GAClB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,aACb,wCAAa,0BAAMA,UAAU,qBAAqBD,EAAME,KAAKC,YAAY0B,cACzE,0CAAe,0BAAM5B,UAAU,qBAAqBD,EAAME,KAAKC,YAAYmB,WAC3E,sCAAW,0BAAMrB,UAAU,qBAAqBD,EAAME,KAAKC,YAAY2B,QAE3E,yBAAK7B,UAAU,oBAAoBD,EAAME,KAAKC,YAAY4B","file":"component---src-pages-work-js-02aff8a9f24554157c20.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport ProjectInfo from \"./projectInfo\"\n\nexport default props => (\n  <div>\n    <ProjectInfo props {...props} />\n  <article\n    className={`project-item project-item-large ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={`/work/${props.node.frontmatter.slug}`} className=\"project-item-link\">\n      <div className=\"project-item-content\">\n      </div>\n    </Link>\n  </article>\n  </div>\n)\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\n import React from \"react\"\n import { StaticQuery, graphql } from \"gatsby\"\n import ProjectListItem from \"../projects/projectListItem\"\n import \"./projectList.css\"\n\n const ProjectList = ({ data }) => {\n  const projects = data.allMarkdownRemark.edges\n\n   return (\n      <div className=\"page-template project-list\">\n        <h1>Selected Projects</h1>\n\n      {projects.map(({ node }) => {\n        return (\n          <ProjectListItem\n            key={node.frontmatter.slug}\n            node={node}\n          />\n        )\n      })}\n    </div>\n   )\n }\n \n const projectQuery = graphql`\n query {\n   site {\n     siteMetadata {\n       title\n       description\n     }\n   }\n   allMarkdownRemark(filter: { fields: { collection: { eq: \"work\"}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n     edges {\n       node {\n         excerpt\n         fields {\n           collection\n         }\n         frontmatter {\n           date(formatString: \"MMMM DD, YYYY\")\n           title\n           slug\n           description\n           size\n           location\n           client_name\n           thumbnail {\n             childImageSharp {\n               fluid(maxWidth: 1360) {\n                 ...GatsbyImageSharpFluid\n               }\n             }\n           }\n         }\n       }\n     }\n   }\n }\n`\nexport default props => (\n  <StaticQuery\n    query={projectQuery}\n    render={data => (\n      <ProjectList props data={data} {...props} />\n    )}\n  />\n)\n ","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport ProjectList from \"../components/projects/projectList\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nconst WorkPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Work\"\n        keywords={[`portfolio`, `architecture`, `projects`, `case study`]}\n      />\n\n      <article className=\"page-template post-content art project-content-body\">\n        <h1>Work</h1>\n        <p>I'm a Workplace Design Consultant and Interior Architect.</p>\n        <p>\n          I help clients who:\n          <ol>\n            <li>\n              Would like to stay in the current location, but the existing space\n              no longer works well for them. The reasons vary - the most common\n              ones are: team growth, change of branding, and the desire to\n              attract new talent or investors.\n            </li>\n            <li>\n              Need a new office. By gathering their requirements and forming a\n              detailed design brief, I suggest the appropriate size space. I do\n              so by considering both current size and potential future growth of\n              the company, to avoid additional costs. By space-planning each\n              potential building, I help the client select the most appropriate\n              to meet their needs, both functionally and financially.\n            </li>\n          </ol>\n        </p>\n\n        <h3>Design Process</h3>\n\n        <div className=\"quote\">\n          <blockquote>\n            <p>\n              \"To ask the right questions is half of the solution of a problem\"\n            </p>\n            <cite>\n              <span>Carl Jung</span>\n            </cite>\n          </blockquote>\n        </div>\n\n        <p>\n          The most crucial aspect of a successful project is asking the right\n          questions to clients. <br />I make use of my organisational psychology\n          background to craft bespoke materials to collect useful data. I’ve\n          written Internal Staff Questionnaires, anagement Team Questionnaires\n          and Evaluation Forms customised for the different types of clients, to\n          create the most accurate and comprehensive design brief.\n        </p>\n        <p>\n          I aim to use my design knowledge and experience to maximise the\n          potential use of space with a focus on human-centric design and\n          increasing productivity.\n          <strong>\n            {\" \"}\n            Analysing individual and collective behaviours across an\n            organisation is one of the key factors to achieve multifunctional,\n            multicultural and timeless spaces.\n          </strong>\n        </p>\n        <p>\n          Being aware of the impact of colour and light on humans’ psychology\n          and mood, I transform the identity of spaces with architectural\n          trickery, coming up with cost-effective solutions to many design\n          problems.\n          <br />\n          <strong>\n            I use art as a part of the architecture, not as a simple accessory.\n          </strong>\n          <br />\n          I can craft bespoke art pieces to translate the energy and branding of\n          a company to the space.\n          <br />\n          <br />I believe that a significant increase in productivity can only\n          be achieved by not losing the focus on happiness and mental health of\n          the users of the space, and this has to carry throughout the whole\n          design process.\n        </p>\n      </article>\n      <ProjectList />\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            collection\n          }\n          frontmatter {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <WorkPage location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","import React from \"react\"\nimport \"./projectList.css\"\n\nconst ProjectInfo = props => {\n  return (\n    <div className=\"project\">\n      <div className=\"project-info\">\n      <div className=\"half spec\">\n        <div>Client: <span className=\"underline-magical\">{props.node.frontmatter.client_name}</span></div>\n        <div>Location: <span className=\"underline-magical\">{props.node.frontmatter.location}</span></div>\n        <div>Size: <span className=\"underline-magical\">{props.node.frontmatter.size}</span></div>\n      </div>\n    <div className=\"description half\">{props.node.frontmatter.description}</div>\n    </div>\n    </div>\n  )\n}\n\nexport default ProjectInfo\n"],"sourceRoot":""}