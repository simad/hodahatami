{"version":3,"sources":["webpack:///./src/components/projects/projectListItem.js","webpack:///./src/components/projects/projectList.js","webpack:///./src/pages/work.js","webpack:///./src/components/projects/projectInfo.js"],"names":["props","className","projectClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","slug","title","ProjectList","projects","data","allMarkdownRemark","edges","map","key","query","render","WorkPage","location","siteTitle","site","siteMetadata","keywords","ProjectInfo","client_name","size","description"],"mappings":"4IAIe,WAAAA,GAAK,OAClB,6BACE,kBAAC,IAAD,eAAaA,OAAK,GAAKA,IACzB,6BACEC,UAAS,mCACPD,EAAME,aADC,KAELF,EAAMG,KAAKC,YAAYC,UAAvB,yBACJC,MACEN,EAAMG,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OACdP,EAAMG,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAD1C,MAMnB,kBAAC,OAAD,CAAMC,GAAE,SAAWX,EAAMG,KAAKC,YAAYQ,KAAQX,UAAU,qBAC1D,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,sBACXD,EAAMG,KAAKC,YAAYS,OAASb,EAAMG,KAAKC,YAAYQ,WCV3DE,G,UAAc,SAAC,GAAc,IAC5BC,EAD2B,EAAXC,KACAC,kBAAkBC,MAEvC,OACG,yBAAKjB,UAAU,gBACb,iDAEDc,EAASI,KAAI,YAAe,IAAZhB,EAAW,EAAXA,KACf,OACE,kBAAC,EAAD,CACEiB,IAAKjB,EAAKC,YAAYQ,KACtBT,KAAMA,UA4CH,aAAAH,GAAK,OAClB,kBAAC,cAAD,CACEqB,MAtCe,aAuCfC,OAAQ,SAAAN,GAAI,OACV,kBAAC,EAAD,eAAahB,OAAK,EAACgB,KAAMA,GAAUhB,S,gFCvEzC,gFAUMuB,GAVN,oBAUiB,SAAC,EAAUC,GAAc,IAClCC,EADiC,EAArBT,KACKU,KAAKC,aAAad,MAEzC,OACE,kBAAC,IAAD,CAAQA,MAAOY,GACb,kBAAC,IAAD,CACEZ,MAAM,OACNe,SAAU,CAAC,YAAD,0CAGX,kBAAC,IAAD,SAwCQ,mBAAA5B,GAAK,OAClB,kBAAC,cAAD,CACEqB,MApCY,aAqCZC,OAAQ,SAAAN,GAAI,OACV,kBAACO,EAAD,eAAUC,SAAUxB,EAAMwB,SAAUxB,OAAK,EAACgB,KAAMA,GAAUhB,S,2DChEhE,mCAkBe6B,IAfK,SAAA7B,GAClB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,QACb,wCAAa,0BAAMA,UAAU,qBAAqBD,EAAMG,KAAKC,YAAY0B,cACzE,0CAAe,0BAAM7B,UAAU,qBAAqBD,EAAMG,KAAKC,YAAYoB,WAC3E,sCAAW,0BAAMvB,UAAU,qBAAqBD,EAAMG,KAAKC,YAAY2B,QAE3E,yBAAK9B,UAAU,oBAAoBD,EAAMG,KAAKC,YAAY4B","file":"component---src-pages-work-js-0a3ffae7ebd6aed64f39.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport ProjectInfo from \"./projectInfo\"\n\nexport default props => (\n  <div>\n    <ProjectInfo props {...props} />\n  <article\n    className={`project-item project-item-large ${\n      props.projectClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={`/work/${props.node.frontmatter.slug}`} className=\"project-item-link\">\n      <div className=\"project-item-content\">\n        <h3 className=\"project-item-title\">\n          {props.node.frontmatter.title || props.node.frontmatter.slug}\n        </h3>\n      </div>\n    </Link>\n  </article>\n  </div>\n)\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\n import React from \"react\"\n import { StaticQuery, graphql } from \"gatsby\"\n import ProjectListItem from \"../projects/projectListItem\"\n import \"./projectList.css\"\n\n const ProjectList = ({ data }) => {\n  const projects = data.allMarkdownRemark.edges\n\n   return (\n      <div className=\"project-list\">\n        <h1>Selected Projects</h1>\n\n      {projects.map(({ node }) => {\n        return (\n          <ProjectListItem\n            key={node.frontmatter.slug}\n            node={node}\n          />\n        )\n      })}\n    </div>\n   )\n }\n \n const projectQuery = graphql`\n query {\n   site {\n     siteMetadata {\n       title\n       description\n     }\n   }\n   allMarkdownRemark(filter: { fields: { collection: { eq: \"work\"}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n     edges {\n       node {\n         excerpt\n         fields {\n           collection\n         }\n         frontmatter {\n           date(formatString: \"MMMM DD, YYYY\")\n           title\n           slug\n           description\n           size\n           location\n           client_name\n           thumbnail {\n             childImageSharp {\n               fluid(maxWidth: 1360) {\n                 ...GatsbyImageSharpFluid\n               }\n             }\n           }\n         }\n       }\n     }\n   }\n }\n`\nexport default props => (\n  <StaticQuery\n    query={projectQuery}\n    render={data => (\n      <ProjectList props data={data} {...props} />\n    )}\n  />\n)\n ","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ProjectList from \"../components/projects/projectList\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nconst WorkPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Work\"\n        keywords={[`portfolio`, `architecture`, `projects`, `case study`]}\n      />\n      \n      {<ProjectList />}\n\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            collection\n          }\n          frontmatter {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <WorkPage location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","import React from \"react\"\nimport \"./projectList.css\"\n\nconst ProjectInfo = props => {\n  return (\n    <div className=\"project\">\n      <div className=\"project-info\">\n      <div className=\"half\">\n        <div>Client: <span className=\"underline-magical\">{props.node.frontmatter.client_name}</span></div>\n        <div>Location: <span className=\"underline-magical\">{props.node.frontmatter.location}</span></div>\n        <div>Size: <span className=\"underline-magical\">{props.node.frontmatter.size}</span></div>\n      </div>\n    <div className=\"description half\">{props.node.frontmatter.description}</div>\n    </div>\n    </div>\n  )\n}\n\nexport default ProjectInfo\n"],"sourceRoot":""}