{"version":3,"sources":["webpack:///./src/components/projects/projectListItem.js","webpack:///./src/components/projects/projectList.js","webpack:///./src/components/login.js","webpack:///./src/pages/work.js","webpack:///./src/services/auth.js","webpack:///./src/components/projects/projectInfo.js"],"names":["props","className","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","slug","ProjectList","projects","data","allMarkdownRemark","edges","map","key","query","render","Login","state","password","handleUpdate","event","setState","target","name","value","handleSubmit","preventDefault","handleLogin","isLoggedIn","method","onSubmit","type","this","onChange","React","Component","WorkPage","location","siteTitle","site","siteMetadata","title","keywords","getUser","window","localStorage","getItem","JSON","parse","setUser","user","setItem","stringify","authenticated","ProjectInfo","client_name","size","description"],"mappings":"6IAIe,WAAAA,GAAK,OAClB,6BACE,kBAAC,IAAD,eAAaA,OAAK,GAAKA,IACzB,6BACEC,UAAS,oCAAqCD,EAAME,KAAKC,YAAYC,UAAvB,yBAC9CC,MACEL,EAAME,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OACdN,EAAME,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAD1C,MAMnB,kBAAC,OAAD,CAAMC,GAAE,SAAWV,EAAME,KAAKC,YAAYQ,KAAQV,UAAU,qBAC1D,yBAAKA,UAAU,6BCNdW,G,UAAc,SAAC,GAAc,IAC5BC,EAD2B,EAAXC,KACAC,kBAAkBC,MAEvC,OACG,yBAAKf,UAAU,8BACb,iDAEDY,EAASI,KAAI,YAAe,IAAZf,EAAW,EAAXA,KACf,OACE,kBAAC,EAAD,CACEgB,IAAKhB,EAAKC,YAAYQ,KACtBT,KAAMA,UA4CH,aAAAF,GAAK,OAClB,kBAAC,cAAD,CACEmB,MAtCe,aAuCfC,OAAQ,SAAAN,GAAI,OACV,kBAAC,EAAD,eAAad,OAAK,EAACc,KAAMA,GAAUd,S,wLC1B1BqB,E,oJAzCbC,MAAQ,CACNC,SAAS,I,EAEXC,aAAe,SAAAC,GAAU,IAAD,EACtB,EAAKC,WAAL,MACGD,EAAME,OAAOC,MAAOH,EAAME,OAAOE,MADpC,K,EAIFC,aAAe,SAAAL,GACbA,EAAMM,iBACNC,YAAY,EAAKV,OACjB,EAAKI,SACD,CACIH,SAAS,M,sCAGnBH,OAAA,WAAU,IAAD,OACP,OAAIa,cACK,kBAAC,IAAD,MAGL,yBAAKhC,UAAU,uBACf,2DACA,0BACEiC,OAAO,OACPC,SAAU,SAAAV,GACR,EAAKK,aAAaL,KAGlB,2BACEW,KAAK,WACLR,KAAK,WACLC,MAAOQ,KAAKf,MAAMC,SAClBe,SAAUD,KAAKb,eAEnB,2BAAOvB,UAAU,0BAA0BmC,KAAK,SAASP,MAAM,U,GApCrDU,IAAMC,WCOpBC,G,oBAAW,SAAC,EAAUC,GAAc,IAClCC,EADiC,EAArB7B,KACK8B,KAAKC,aAAaC,MAEzC,OACE,kBAAC,IAAD,CAAQA,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,OACNC,SAAU,CAAC,YAAD,0CAIX,kBAAC,EAAD,SAwCQ,mBAAA/C,GAAK,OAClB,kBAAC,cAAD,CACEmB,MApCY,aAqCZC,OAAQ,SAAAN,GAAI,OACV,kBAAC,EAAD,eAAU4B,SAAU1C,EAAM0C,SAAU1C,OAAK,EAACc,KAAMA,GAAUd,S,oCCjEhE,oEAAO,IACMgD,EAAU,iBAD0B,oBAAXC,QAErBA,OAAOC,aAAaC,QAAQ,aACvCC,KAAKC,MAAMJ,OAAOC,aAAaC,QAAQ,cACvC,IACAG,EAAU,SAAAC,GAAI,OAClBN,OAAOC,aAAaM,QAAQ,YAAaJ,KAAKK,UAAUF,KAC7CvB,EAAc,SAAC,GAC1B,MAAY,iBAD+B,EAAfT,UAEnB+B,EAAQ,CACbI,eAAe,KAKRzB,EAAa,WAExB,QADae,IACCU,gB,2DCjBhB,mCAkBeC,IAfK,SAAA3D,GAClB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,aACb,wCAAa,0BAAMA,UAAU,qBAAqBD,EAAME,KAAKC,YAAYyD,cACzE,0CAAe,0BAAM3D,UAAU,qBAAqBD,EAAME,KAAKC,YAAYuC,WAC3E,sCAAW,0BAAMzC,UAAU,qBAAqBD,EAAME,KAAKC,YAAY0D,QAE3E,yBAAK5D,UAAU,oBAAoBD,EAAME,KAAKC,YAAY2D","file":"component---src-pages-work-js-df52e4565e3e03885e53.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport ProjectInfo from \"./projectInfo\"\n\nexport default props => (\n  <div>\n    <ProjectInfo props {...props} />\n  <article\n    className={`project-item project-item-large ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={`/work/${props.node.frontmatter.slug}`} className=\"project-item-link\">\n      <div className=\"project-item-content\">\n      </div>\n    </Link>\n  </article>\n  </div>\n)\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\n import React from \"react\"\n import { StaticQuery, graphql } from \"gatsby\"\n import ProjectListItem from \"../projects/projectListItem\"\n import \"./projectList.css\"\n\n const ProjectList = ({ data }) => {\n  const projects = data.allMarkdownRemark.edges\n\n   return (\n      <div className=\"page-template project-list\">\n        <h1>Selected Projects</h1>\n\n      {projects.map(({ node }) => {\n        return (\n          <ProjectListItem\n            key={node.frontmatter.slug}\n            node={node}\n          />\n        )\n      })}\n    </div>\n   )\n }\n \n const projectQuery = graphql`\n query {\n   site {\n     siteMetadata {\n       title\n       description\n     }\n   }\n   allMarkdownRemark(filter: { fields: { collection: { eq: \"work\"}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n     edges {\n       node {\n         excerpt\n         fields {\n           collection\n         }\n         frontmatter {\n           date(formatString: \"MMMM DD, YYYY\")\n           title\n           slug\n           description\n           size\n           location\n           client_name\n           thumbnail {\n             childImageSharp {\n               fluid(maxWidth: 1360) {\n                 ...GatsbyImageSharpFluid\n               }\n             }\n           }\n         }\n       }\n     }\n   }\n }\n`\nexport default props => (\n  <StaticQuery\n    query={projectQuery}\n    render={data => (\n      <ProjectList props data={data} {...props} />\n    )}\n  />\n)\n ","import React from \"react\"\nimport ProjectList from \"../components/projects/projectList\"\nimport { handleLogin, isLoggedIn } from \"../services/auth\"\nclass Login extends React.Component {\n  state = {\n    password: ``\n  }\n  handleUpdate = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n  handleSubmit = event => {\n    event.preventDefault()\n    handleLogin(this.state)\n    this.setState(\n        {\n            password: ``\n        })\n  }\n  render() {\n    if (isLoggedIn()) {\n      return <ProjectList />\n    }\n    return (\n        <div className=\"page-template login\">\n        <h3>Please insert your password</h3>\n        <form\n          method=\"post\"\n          onSubmit={event => {\n            this.handleSubmit(event)\n          }}\n        >\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleUpdate}\n            />\n          <input className=\"submit-password primary\" type=\"submit\" value=\"Go\" />\n        </form> \n    </div>\n    )\n  }\n}\nexport default Login","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Login from \"../components/login\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nconst WorkPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Work\"\n        keywords={[`portfolio`, `architecture`, `projects`, `case study`]}\n      />\n      \n      \n      {<Login />}\n\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            collection\n          }\n          frontmatter {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <WorkPage location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","export const isBrowser = () => typeof window !== \"undefined\"\nexport const getUser = () =>\n  isBrowser() && window.localStorage.getItem(\"hoda_auth\")\n    ? JSON.parse(window.localStorage.getItem(\"hoda_auth\"))\n    : {}\nconst setUser = user =>\n  window.localStorage.setItem(\"hoda_auth\", JSON.stringify(user))\nexport const handleLogin = ({ password }) => {\n  if (password === `hodadesign21`) {\n    return setUser({\n      authenticated: true\n    })\n  }\n  return false\n}\nexport const isLoggedIn = () => {\n  const user = getUser()\n  return !!user.authenticated\n}\nexport const logout = callback => {\n  setUser({})\n  callback()\n}","import React from \"react\"\nimport \"./projectList.css\"\n\nconst ProjectInfo = props => {\n  return (\n    <div className=\"project\">\n      <div className=\"project-info\">\n      <div className=\"half spec\">\n        <div>Client: <span className=\"underline-magical\">{props.node.frontmatter.client_name}</span></div>\n        <div>Location: <span className=\"underline-magical\">{props.node.frontmatter.location}</span></div>\n        <div>Size: <span className=\"underline-magical\">{props.node.frontmatter.size}</span></div>\n      </div>\n    <div className=\"description half\">{props.node.frontmatter.description}</div>\n    </div>\n    </div>\n  )\n}\n\nexport default ProjectInfo\n"],"sourceRoot":""}