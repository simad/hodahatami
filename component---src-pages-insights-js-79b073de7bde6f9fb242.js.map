{"version":3,"sources":["webpack:///./src/components/articles/articleListItem.js","webpack:///./src/components/articles/articleList.js","webpack:///./src/pages/insights.js"],"names":["props","className","to","node","frontmatter","slug","title","date","description","src","thumbnail","childImageSharp","fluid","ArticleList","articles","data","allMarkdownRemark","edges","map","key","query","render","ArticlesPage","siteTitle","site","siteMetadata","keywords"],"mappings":"sOAIe,G,UAAA,SAAAA,GAAK,OAClB,yBAAKC,UAAU,WACb,kBAAC,OAAD,CAAMC,GAAE,aAAeF,EAAMG,KAAKC,YAAYC,KAAQJ,UAAU,qBAElE,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,SACf,4BAAI,0BAAMA,UAAU,qBAAqBD,EAAMG,KAAKC,YAAYE,QAChE,6BAAK,2BAAIN,EAAMG,KAAKC,YAAYG,OAChC,yBAAKN,UAAU,eAAeD,EAAMG,KAAKC,YAAYI,cAErD,yBAAKP,UAAS,sBACZ,yBAAKQ,IAAKT,EAAMG,KAAKC,YAAYM,UAAUC,gBAAgBC,MAAMH,YCHhEI,G,UAAc,SAAC,GAAc,IAC5BC,EAD2B,EAAXC,KACAC,kBAAkBC,MAEvC,OACG,yBAAKhB,UAAU,8BACb,wDAEDa,EAASI,KAAI,YAAe,IAAZf,EAAW,EAAXA,KACf,OACE,kBAAC,EAAD,CACEgB,IAAKhB,EAAKC,YAAYC,KACtBF,KAAMA,UAyCH,WAAAH,GAAK,OAClB,kBAAC,cAAD,CACEoB,MAnCgB,aAoChBC,OAAQ,SAAAN,GAAI,OACV,kBAAC,EAAD,eAAaf,OAAK,EAACe,KAAMA,GAAUf,QC1DnCsB,G,oBAAe,SAAC,GAAc,IAC5BC,EAD2B,EAAXR,KACCS,KAAKC,aAAanB,MAEzC,OACE,kBAAC,IAAD,CAAQA,MAAOiB,GACb,kBAAC,IAAD,CACEjB,MAAM,WACNoB,SAAU,CAAC,YAAD,0CAGX,kBAAC,EAAD,SAiBQ,mBAAA1B,GAAK,OAClB,kBAAC,cAAD,CACEoB,MAbY,aAcZC,OAAQ,SAAAN,GAAI,OACV,kBAAC,EAAD,eAAcf,OAAK,EAACe,KAAMA,GAAUf","file":"component---src-pages-insights-js-79b073de7bde6f9fb242.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nexport default props => (\n  <div className=\"article\">\n    <Link to={`/insights/${props.node.frontmatter.slug}`} className=\"article-item-link\">\n\n  <div className=\"article-info\">\n    <div className=\"sixty\">\n    <h3><span className=\"underline-magical\">{props.node.frontmatter.title}</span></h3>\n    <div><i>{props.node.frontmatter.date}</i></div>\n    <div className=\"description\">{props.node.frontmatter.description}</div>\n      </div>\n    <div className={`forty article-item`}>\n      <img src={props.node.frontmatter.thumbnail.childImageSharp.fluid.src}></img>\n      \n    </div>\n  </div>\n  </Link>\n  </div>\n)\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\n import React from \"react\"\n import { StaticQuery, graphql } from \"gatsby\"\n import ArticleListItem from \"./articleListItem\"\n import \"./articles.css\"\n\n const ArticleList = ({ data }) => {\n  const articles = data.allMarkdownRemark.edges\n\n   return (\n      <div className=\"page-template article-list\">\n        <h1>What I am thinking about</h1>\n\n      {articles.map(({ node }) => {\n        return (\n          <ArticleListItem\n            key={node.frontmatter.slug}\n            node={node}\n          />\n        )\n      })} \n    </div>\n   )\n }\n \n const articlesQuery = graphql`\n query {\n   site {\n     siteMetadata {\n       title\n       description\n     }\n   }\n   allMarkdownRemark(filter: { fields: { collection: { eq: \"insights\"}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n     edges {\n       node {\n         excerpt\n         fields {\n           collection\n         }\n         frontmatter {\n           date(formatString: \"MMMM DD, YYYY\")\n           title\n           slug\n           description\n           thumbnail {\n             childImageSharp {\n               fluid(maxWidth: 1360) {\n                 ...GatsbyImageSharpFluid\n               }\n             }\n           }\n         }\n       }\n     }\n   }\n }\n`\nexport default props => (\n  <StaticQuery\n    query={articlesQuery}\n    render={data => (\n      <ArticleList props data={data} {...props} />\n    )}\n  />\n)\n ","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ArticleList from \"../components/articles/articleList\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nconst ArticlesPage = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Insights\"\n        keywords={[`portfolio`, `architecture`, `articles`, `case study`]}\n      />\n      \n      {<ArticleList />}\n\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <ArticlesPage props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}