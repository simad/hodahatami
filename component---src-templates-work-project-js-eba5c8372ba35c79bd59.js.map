{"version":3,"sources":["webpack:///./src/templates/work/project.js","webpack:///./src/components/projects/projectInfo.js"],"names":["ProjectTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","location","frontmatter","description","excerpt","className","thumbnail","fluid","childImageSharp","alt","node","dangerouslySetInnerHTML","__html","html","React","Component","ProjectInfo","client_name","size"],"mappings":"iPAUMA,G,4GACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAEpD,OACE,kBAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUD,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOR,EAAKU,YAAYF,MACxBG,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,6BACEC,UAAS,oBAAqBb,EAAKU,YAAYI,WAAjB,aAE9B,4BAAQD,UAAU,0BAChB,wBAAIA,UAAU,yBAAyBb,EAAKU,YAAYF,QAGzDR,EAAKU,YAAYI,WAChB,yBAAKD,UAAU,yBACb,kBAAC,IAAD,CACEA,UAAU,WACVE,MAAOf,EAAKU,YAAYI,UAAUE,gBAAgBD,MAClDE,IAAKjB,EAAKU,YAAYF,SAK1B,kBAAC,IAAD,CAAaK,UAAU,mBAAmBK,KAAMlB,IAElD,yBACEa,UAAU,uBACVM,wBAAyB,CAAEC,OAAQpB,EAAKqB,QAG1C,4BAAQR,UAAU,8B,GAnCES,IAAMC,YA+CrBzB,a,oCCzDf,mCAkBe0B,IAfK,SAAAtB,GAClB,OACE,yBAAKW,UAAU,WACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,aACb,wCAAa,0BAAMA,UAAU,qBAAqBX,EAAMgB,KAAKR,YAAYe,cACzE,0CAAe,0BAAMZ,UAAU,qBAAqBX,EAAMgB,KAAKR,YAAYD,WAC3E,sCAAW,0BAAMI,UAAU,qBAAqBX,EAAMgB,KAAKR,YAAYgB,QAE3E,yBAAKb,UAAU,oBAAoBX,EAAMgB,KAAKR,YAAYC","file":"component---src-templates-work-project-js-eba5c8372ba35c79bd59.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport ProjectInfo from \"../../components/projects/projectInfo\"\n\nimport \"./project.css\"\n\nclass ProjectTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article\n          className={`project-content ${post.frontmatter.thumbnail || `no-image`}`}\n        >\n          <header className=\"project-content-header\">\n            <h1 className=\"project-content-title\">{post.frontmatter.title}</h1>\n          </header>\n\n          {post.frontmatter.thumbnail && (\n            <div className=\"project-content-image\">\n              <Img\n                className=\"kg-image\"\n                fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\n                alt={post.frontmatter.title}\n              />\n            </div>\n          )}\n          \n          { <ProjectInfo className=\"project-template\" node={post}/> }\n\n          <div\n            className=\"project-content-body\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <footer className=\"project-content-footer\">\n            {/* There are two options for how we display the byline/author-info.\n        If the post has more than one author, we load a specific template\n        from includes/byline-multiple.hbs, otherwise, we just use the\n        default byline. */}\n          </footer>\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default ProjectTemplate\n\nexport const pageQuery = graphql`\n  query ProjectBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        slug\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        client_name\n        size\n        location\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1360) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport \"./projectList.css\"\n\nconst ProjectInfo = props => {\n  return (\n    <div className=\"project\">\n      <div className=\"project-info\">\n      <div className=\"half spec\">\n        <div>Client: <span className=\"underline-magical\">{props.node.frontmatter.client_name}</span></div>\n        <div>Location: <span className=\"underline-magical\">{props.node.frontmatter.location}</span></div>\n        <div>Size: <span className=\"underline-magical\">{props.node.frontmatter.size}</span></div>\n      </div>\n    <div className=\"description half\">{props.node.frontmatter.description}</div>\n    </div>\n    </div>\n  )\n}\n\nexport default ProjectInfo\n"],"sourceRoot":""}